Command: ninja all
[1/12] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/hello_world_main.c.obj
[2/12] Performing build step for 'bootloader'
[1/1] C:\WINDOWS\system32\cmd.exe /C "cd /D C:\esp_test\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.5_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.5/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/esp_test/build/bootloader/bootloader.bin"
Bootloader binary size 0x6680 bytes. 0x980 bytes (8%) free.
[3/12] No install step for 'bootloader'
[4/12] Completed 'bootloader'
[5/12] Building C object esp-idf/games/CMakeFiles/__idf_games.dir/snake.c.obj
[6/12] Building C object esp-idf/games/CMakeFiles/__idf_games.dir/tilt_maze.c.obj
[7/12] Linking C static library esp-idf\games\libgames.a
[8/12] Linking C static library esp-idf\main\libmain.a
[9/12] Generating esp-idf/esp_system/ld/sections.ld
[10/12] Linking CXX executable hello_world.elf
[11/12] Generating binary image from built executable
esptool.py v4.10.dev2
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/esp_test/build/hello_world.bin
[12/12] C:\WINDOWS\system32\cmd.exe /C "cd /D C:\esp_test\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.5_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.5/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/esp_test/build/partition_table/partition-table.bin C:/esp_test/build/hello_world.bin"
hello_world.bin binary size 0x3a1e0 bytes. Smallest app partition is 0x100000 bytes. 0xc5e20 bytes (77%) free.
